group 'deepwater.backends.tensorflow'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'

repositories {
    mavenCentral()
    flatDir {
      dirs "${rootDir}/tensorflow/lib"
    }
}

sourceSets {
    main {
        java {
            srcDirs "${rootDir}/tensorflow/src/main/grpc"
        }
    }
}

dependencies {

    compile files ("lib/org/tensorflow/libtensorflow/1.0.1/libtensorflow-1.0.1.jar")
    compile project (':deepwater-backend-api')
    compile "com.google.protobuf:protobuf-java:3.2.0"
    compile 'com.google.guava:guava:19.0'

    compile 'io.grpc:grpc-netty:1.0.1'
    compile 'io.grpc:grpc-protobuf:1.0.1'
    compile 'io.grpc:grpc-stub:1.0.1'

    // https://mvnrepository.com/artifact/org.hdfgroup/hdf-java
    compile group: 'org.hdfgroup', name: 'hdf-java', version: '2.6.1'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.7'

}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}


jar {
    baseName = rootProject.name + "." + project.name

    from ("lib/") { include '*.so' }

    // include also the sources for easy debugging
    from sourceSets.main.allSource

    // copy all the other dependencies as a single JAR
    from configurations.compile.collect {it.isDirectory() ? it: zipTree(it)}
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

task tensorflowCompile(type: Exec) {
    commandLine "bash", "cppbuild.sh", "install", "tensorflow"
    workingDir "$rootDir/thirdparty"
}

//compileJava.dependsOn(tensorflowCompile)

task tensorflowClean(type: Exec) {
    commandLine "rm", "-fr", "$rootDir/thirdparty/tensorflow/cppbuild/*"
    workingDir "$rootDir/thirdparty"
}
clean.dependsOn(tensorflowClean)